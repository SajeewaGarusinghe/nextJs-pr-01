{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\SAJEEWA\\\\Downloads\\\\Video\\\\web development\\\\common-developent-files\\\\VS code files\\\\courses\\\\Next JS\\\\nextJs-pr-01\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React from 'react';\nimport UseRouter from 'next/router';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient } from 'mongodb';\n\nconst ShowDetail = props => {\n  //   const router = useRouter();\n  //   const id = router.query.meetupId;\n  const {\n    image,\n    title,\n    addres,\n    description\n  } = props.mee;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      id: props,\n      image: \"https://cdn.britannica.com/16/216516-050-75F09979/Niagara-Falls-Buffalo-New-York.jpg?q=60\",\n      title: \"first Meetup\",\n      address: \"no 5,kingsly road,atuwetta\",\n      description: \"this is a fuckin meetup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://new-user:mongo-pwd@cluster0.yvmpsni.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray(); //first argument of find is filter criteria while second argument  is only interst in id parameter\n\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => {\n      params: {\n        meetupId: meetup._id.toString();\n      }\n    })\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data from API\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  const client = await MongoClient.connect('mongodb+srv://new-user:mongo-pwd@cluster0.yvmpsni.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const seletedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: seletedMeetup\n    }\n  };\n}\nexport default ShowDetail;","map":{"version":3,"sources":["C:/Users/SAJEEWA/Downloads/Video/web development/common-developent-files/VS code files/courses/Next JS/nextJs-pr-01/pages/[meetupId]/index.js"],"names":["React","UseRouter","MeetupDetail","MongoClient","ShowDetail","props","image","title","addres","description","mee","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","seletedMeetup","findOne","meetupData"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B;AACA;AACA,QAAM;AAACC,IAAAA,KAAD;AAAOC,IAAAA,KAAP;AAAaC,IAAAA,MAAb;AAAoBC,IAAAA;AAApB,MAAiCJ,KAAK,CAACK,GAA7C;AACA,sBACE;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,EAAE,EAAEL,KADN;AAEE,MAAA,KAAK,EAAC,2FAFR;AAGE,MAAA,KAAK,EAAC,cAHR;AAIE,MAAA,OAAO,EAAC,4BAJV;AAKE,MAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAWD,CAfD;;AAiBA,OAAO,eAAeM,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,4FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB,CARqC,CAQmC;;AACxER,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,IAAY;AAC7BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AACX;AACF,KAJM;AAFF,GAAP;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAGA,QAAMf,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,4FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMiB,aAAa,GAAG,MAAMlB,iBAAiB,CAACmB,OAAlB,CAA0B;AAACf,IAAAA,GAAG,EAACQ;AAAL,GAA1B,CAA5B;AACAf,EAAAA,MAAM,CAACS,KAAP;AAKA,SAAO;AACLhB,IAAAA,KAAK,EAAE;AACL8B,MAAAA,UAAU,EAAEF;AADP;AADF,GAAP;AAMD;AACD,eAAe7B,UAAf","sourcesContent":["import React from 'react';\r\nimport UseRouter from 'next/router';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\nimport { MongoClient } from 'mongodb';\r\n\r\nconst ShowDetail = (props) => {\r\n  //   const router = useRouter();\r\n  //   const id = router.query.meetupId;\r\n  const {image,title,addres,description}=props.mee\r\n  return (\r\n    <>\r\n      <MeetupDetail\r\n        id={props}\r\n        image=\"https://cdn.britannica.com/16/216516-050-75F09979/Niagara-Falls-Buffalo-New-York.jpg?q=60\"\r\n        title=\"first Meetup\"\r\n        address=\"no 5,kingsly road,atuwetta\"\r\n        description=\"this is a fuckin meetup\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://new-user:mongo-pwd@cluster0.yvmpsni.mongodb.net/?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray(); //first argument of find is filter criteria while second argument  is only interst in id parameter\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => {\r\n      params: {\r\n        meetupId: meetup._id.toString();\r\n      }\r\n    }),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  //fetch data from API\r\n\r\n  const meetupId = context.params.meetupId;\r\n  console.log(meetupId);\r\n\r\n\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://new-user:mongo-pwd@cluster0.yvmpsni.mongodb.net/?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const seletedMeetup = await meetupsCollection.findOne({_id:meetupId}) \r\n  client.close();\r\n\r\n\r\n\r\n\r\n  return {\r\n    props: {\r\n      meetupData: seletedMeetup,\r\n    },\r\n    \r\n  };\r\n}\r\nexport default ShowDetail;\r\n"]},"metadata":{},"sourceType":"module"}