{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\SAJEEWA\\\\Downloads\\\\Video\\\\web development\\\\common-developent-files\\\\VS code files\\\\courses\\\\Next JS\\\\nextJs-pr-01\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React from 'react';\nimport UseRouter from 'next/router';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient, ObjectId } from 'mongodb';\n\nconst ShowDetail = props => {\n  //   const router = useRouter();\n  //   const id = router.query.meetupId;\n  const {\n    id,\n    image,\n    title,\n    address,\n    description\n  } = props.meetupData;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      id: id,\n      image: image,\n      title: title,\n      address: address,\n      description: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://new-user:mongo-pwd@cluster0.yvmpsni.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray(); //first argument of find is filter criteria while second argument  is only interst in id parameter\n\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data from API\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  const client = await MongoClient.connect('mongodb+srv://new-user:mongo-pwd@cluster0.yvmpsni.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const seletedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: seletedMeetup._id.toString(),\n        title: seletedMeetup.title,\n        address: seletedMeetup.address,\n        image: seletedMeetup.image,\n        description: seletedMeetup.description\n      }\n    }\n  };\n}\nexport default ShowDetail;","map":{"version":3,"sources":["C:/Users/SAJEEWA/Downloads/Video/web development/common-developent-files/VS code files/courses/Next JS/nextJs-pr-01/pages/[meetupId]/index.js"],"names":["React","UseRouter","MeetupDetail","MongoClient","ObjectId","ShowDetail","props","id","image","title","address","description","meetupData","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","seletedMeetup","findOne"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B;AACA;AACA,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA;AAA7B,MAA6CL,KAAK,CAACM,UAAzD;AACA,sBACE;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,EAAE,EAAEL,EADN;AAEE,MAAA,KAAK,EAAEC,KAFT;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,OAAO,EAAEC,OAJX;AAKE,MAAA,WAAW,EAAEC;AALf;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAWD,CAfD;;AAiBA,OAAO,eAAeE,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,4FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB,CARqC,CAQmC;;AACxER,EAAAA,MAAM,CAACS,KAAP;AAGA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAOD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,QAAMf,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,4FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMiB,aAAa,GAAG,MAAMlB,iBAAiB,CAACmB,OAAlB,CAA0B;AACpDf,IAAAA,GAAG,EAAEjB,QAAQ,CAACyB,QAAD;AADuC,GAA1B,CAA5B;AAGAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLjB,IAAAA,KAAK,EAAE;AACLM,MAAAA,UAAU,EAAE;AACVL,QAAAA,EAAE,EAAE4B,aAAa,CAACd,GAAd,CAAkBS,QAAlB,EADM;AAEVrB,QAAAA,KAAK,EAAE0B,aAAa,CAAC1B,KAFX;AAGVC,QAAAA,OAAO,EAAEyB,aAAa,CAACzB,OAHb;AAIVF,QAAAA,KAAK,EAAE2B,aAAa,CAAC3B,KAJX;AAKVG,QAAAA,WAAW,EAAEwB,aAAa,CAACxB;AALjB;AADP;AADF,GAAP;AAWD;AACD,eAAeN,UAAf","sourcesContent":["import React from 'react';\r\nimport UseRouter from 'next/router';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\n\r\nconst ShowDetail = (props) => {\r\n  //   const router = useRouter();\r\n  //   const id = router.query.meetupId;\r\n  const { id, image, title, address, description } = props.meetupData;\r\n  return (\r\n    <>\r\n      <MeetupDetail\r\n        id={id}\r\n        image={image}\r\n        title={title}\r\n        address={address}\r\n        description={description}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://new-user:mongo-pwd@cluster0.yvmpsni.mongodb.net/?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray(); //first argument of find is filter criteria while second argument  is only interst in id parameter\r\n  client.close();\r\n  \r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  //fetch data from API\r\n\r\n  const meetupId = context.params.meetupId;\r\n  console.log(meetupId);\r\n\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://new-user:mongo-pwd@cluster0.yvmpsni.mongodb.net/?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const seletedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: seletedMeetup._id.toString(),\r\n        title: seletedMeetup.title,\r\n        address: seletedMeetup.address,\r\n        image: seletedMeetup.image,\r\n        description: seletedMeetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\nexport default ShowDetail;\r\n"]},"metadata":{},"sourceType":"module"}