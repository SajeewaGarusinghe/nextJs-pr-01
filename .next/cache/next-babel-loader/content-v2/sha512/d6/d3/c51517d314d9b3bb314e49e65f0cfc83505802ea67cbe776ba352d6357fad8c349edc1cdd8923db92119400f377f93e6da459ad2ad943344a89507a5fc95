{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\SAJEEWA\\\\Downloads\\\\Video\\\\web development\\\\common-developent-files\\\\VS code files\\\\courses\\\\Next JS\\\\nextJs-pr-01\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport React from 'react';\nimport UseRouter from 'next/router';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nvar ShowDetail = function ShowDetail(props) {\n  //   const router = useRouter();\n  //   const id = router.query.meetupId;\n  var _props$meetupData = props.meetupData,\n      id = _props$meetupData.id,\n      image = _props$meetupData.image,\n      title = _props$meetupData.title,\n      address = _props$meetupData.address,\n      description = _props$meetupData.description;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      id: id,\n      image: image,\n      title: title,\n      address: address,\n      description: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_c = ShowDetail;\nexport var __N_SSG = true;\nexport default ShowDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowDetail\");","map":{"version":3,"sources":["C:/Users/SAJEEWA/Downloads/Video/web development/common-developent-files/VS code files/courses/Next JS/nextJs-pr-01/pages/[meetupId]/index.js"],"names":["React","UseRouter","MeetupDetail","ShowDetail","props","meetupData","id","image","title","address","description"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC5B;AACA;AAF4B,0BAGuBA,KAAK,CAACC,UAH7B;AAAA,MAGpBC,EAHoB,qBAGpBA,EAHoB;AAAA,MAGhBC,KAHgB,qBAGhBA,KAHgB;AAAA,MAGTC,KAHS,qBAGTA,KAHS;AAAA,MAGFC,OAHE,qBAGFA,OAHE;AAAA,MAGOC,WAHP,qBAGOA,WAHP;AAI5B,sBACE;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,EAAE,EAAEJ,EADN;AAEE,MAAA,KAAK,EAAEC,KAFT;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,OAAO,EAAEC,OAJX;AAKE,MAAA,WAAW,EAAEC;AALf;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAWD,CAfD;;KAAMP,U;;AA0EN,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\nimport UseRouter from 'next/router';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\n\r\nconst ShowDetail = (props) => {\r\n  //   const router = useRouter();\r\n  //   const id = router.query.meetupId;\r\n  const { id, image, title, address, description } = props.meetupData;\r\n  return (\r\n    <>\r\n      <MeetupDetail\r\n        id={id}\r\n        image={image}\r\n        title={title}\r\n        address={address}\r\n        description={description}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://new-user:mongo-pwd@cluster0.yvmpsni.mongodb.net/?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray(); //first argument of find is filter criteria while second argument  is only interst in id parameter\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => {\r\n      params: {\r\n        meetupId: meetup._id.toString();\r\n      }\r\n    }),\r\n  };\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  //fetch data from API\r\n\r\n  const meetupId = context.params.meetupId;\r\n  console.log(meetupId);\r\n\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://new-user:mongo-pwd@cluster0.yvmpsni.mongodb.net/?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const seletedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: seletedMeetup._id.toString(),\r\n        title: seletedMeetup.title,\r\n        address: seletedMeetup.address,\r\n        image: seletedMeetup.image,\r\n        description: seletedMeetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\nexport default ShowDetail;\r\n"]},"metadata":{},"sourceType":"module"}